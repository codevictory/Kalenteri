@using Kalenteri.Backend.Models

@page "/"
@rendermode InteractiveServer

<PageTitle>Kalenteri</PageTitle>

<h1>Livonsaaren Osuuspuutarha</h1>

<div class="calendar">
    <span class="week-day-header">Ma</span>
    <span>Ti</span>
    <span>Ke</span>
    <span>To</span>
    <span>Pe</span>
    <span>La</span>
    <span>Su</span>
    @for (int day = 1; day < 31; day++)
    {
        var delivery = orders.Single(x => x.Identifier == "asd").Boxes.SingleOrDefault(x => x.Delivery.Day == day);
        if (delivery != null)
        {
            <button class="btn btn-primary" @onclick="@(_ => HandleClick(delivery.Delivery))"
                style="@StyleForState(delivery.PickUp != null)">@day</button>
        }
        else
        {
            <button class="btn btn-primary" disabled>@day</button>
        }
    }
</div>

@code {
    private string StyleForState(bool state)
    {
        if (state) return "background:lightgreen";
        return "background:red";
    }

    private void HandleClick(DateTime delivery)
    {
        if (orders.Single(x => x.Identifier == "asd").Boxes.Single(y => y.Delivery == delivery).PickUp == null)
        {
            orders.Single(x => x.Identifier == "asd").Boxes.Single(y => y.Delivery == delivery).PickUp = DateTime.Now;

        }
        else
        {
            orders.Single(x => x.Identifier == "asd").Boxes.Single(y => y.Delivery == delivery).PickUp = null;
        }
    }


    private List<Order> orders = new List<Order>() {
new Order() {Identifier = "asd", Location = "qwe", Boxes = new List<Box>() {
new Box() { Delivery = DateTime.Now, PickUp = DateTime.Now },
new Box() { Delivery = DateTime.Now.AddDays(1), PickUp = DateTime.Now },
new Box() { Delivery = DateTime.Now.AddDays(4), PickUp = null },
new Box() { Delivery = DateTime.Now.AddDays(12), PickUp = null },
new Box() { Delivery = DateTime.Now.AddDays(18), PickUp = null }
}}
};
}